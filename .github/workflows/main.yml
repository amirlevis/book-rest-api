# This is a basic workflow to help you get started with Actions

name: Fuck Every one

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, production ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 12 15 * *'
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
    # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-push-images:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      -
        name: Checkout
        uses: actions/checkout@v2
      -
       name: Set up Docker Buildx
       id: buildx
       uses: docker/setup-buildx-action@v1

      -
        name: Cache Docker layers
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: $ {{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}=buildx-

      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      -
        name: Docker Meta
        id: docker_meta
        uses: docker/metadata-action@v3.3.0
        with:
         images: |
           amirlevis/hd
         flavor: |
          latest=false
         tags:
           type=raw, value=latest


      -
        name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          push: ${{ github.event.name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      -
        name: Show imgae digest
        run: echo ${{ steps.docker_build.output.digest }}




